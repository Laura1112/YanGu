import java.util.HashMap;
import java.util.Iterator;

/**
 * Given two strings s and t which consist of only lowercase letters.
String t is generated by random shuffling string s and then add one more letter at a random position.
Find the letter that was added in t.
Example:
Input:
s = "abcd"
t = "bacde"
Output:
e
Explanation:
'e' is the letter that was added.
 * @author Laura
 *
 */

//先将较长字符串t一个字符一个字符的加入HashMap中，并用value计数；
//再遍历字符串s,map中存在当前字符，计数（value）减1；
//最后遍历map的key,找到value值不为0的，对应的key即为所有字符
public class Solution {
	public static char findTheDifference(String s, String t) {
		char result = 0;
        HashMap<Character,Integer> map = new HashMap<Character,Integer>();
        for(int i=0;i<t.length();i++){
        	if(map.containsKey(t.charAt(i)))
        		map.put(t.charAt(i),map.get(t.charAt(i))+1);
        	else
        		map.put(t.charAt(i), 1);
        }
        for(int i=0;i<s.length();i++){
        	if(map.containsKey(s.charAt(i)))
        		map.put(s.charAt(i), map.get(s.charAt(i))-1);
        	else
        		result = s.charAt(i);
        }
        Iterator keys = map.keySet().iterator();
        while(keys.hasNext()){
        	Object key = keys.next();
        	if(map.get(key)!=0)
        		result = (Character) key;
        }
        return result;
    }
	
	public static void main(String[] arg){
		String s = "acbdddkaka";
		String t = "abcdakakedd";
		System.out.println(findTheDifference(s,t));
	}
}